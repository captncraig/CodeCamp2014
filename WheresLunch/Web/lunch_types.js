//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


Vote = function(args) {
  this.Name = null;
  this.Restaurant = null;
  if (args) {
    if (args.Name !== undefined) {
      this.Name = args.Name;
    }
    if (args.Restaurant !== undefined) {
      this.Restaurant = args.Restaurant;
    }
  }
};
Vote.prototype = {};
Vote.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.Name = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.Restaurant = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Vote.prototype.write = function(output) {
  output.writeStructBegin('Vote');
  if (this.Name !== null && this.Name !== undefined) {
    output.writeFieldBegin('Name', Thrift.Type.STRING, 1);
    output.writeString(this.Name);
    output.writeFieldEnd();
  }
  if (this.Restaurant !== null && this.Restaurant !== undefined) {
    output.writeFieldBegin('Restaurant', Thrift.Type.STRING, 2);
    output.writeString(this.Restaurant);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

